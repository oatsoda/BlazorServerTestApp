@using RecipesApp.App.Data
@using RecipesApp.App.Models
@inject IRecipesService RecipesService

<div class="modal" tabindex="-1" style="display:block" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">@ModalTitle</h3>
                <button type="button" class="close" @onclick="OnClose">
                    <span aria-hidden="true">X</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-group">
                        <label for="Name" class="control-label">Name</label>
                        <input for="Name" class="form-control" @bind="@RecipeModel.Name" />
                    </div>
                    <div class="form-group">
                        <label for="TotalMinutes" class="control-label">Total Minutes</label>
                        <input for="TotalMinutes" class="form-control" @bind="@RecipeModel.TotalMinutes" />
                    </div>
                    <div class="form-group">
                        <label for="Reference" class="control-label">Reference</label>
                        <input for="Reference" class="form-control" @bind="@RecipeModel.Reference" />
                    </div>
                </form>

                <table class="table">
                    <thead>
                    <tr>
                        <th>Name</th>
                        <th>Quantity</th>
                        <th>Quantity Unit</th>
                        <th></th>
                    </tr>
                    </thead>
                    <tbody>
                        @foreach (var ingredient in @RecipeModel.Ingredients)
                        {
                        <tr id="@ingredient.Id">
                            <td>@ingredient.Name</td>
                            <td>@ingredient.Quantity</td>
                            <td>@ingredient.QuantityType</td>
                            <td>
                                <button class="btn btn-block btn-info" @onclick="() => RemoveIngredient(ingredient)">Remove</button>
                            </td>
                        </tr>
                        }

                    <tr>
                        <td>
                            <input for="Name" class="form-control" @bind="@NewIngredientModel.Name" />
                        </td>
                        <td>
                            <input for="Name" class="form-control" @bind="@NewIngredientModel.Quantity" />
                        </td>
                        <td>
                            <input for="Name" class="form-control" @bind="@NewIngredientModel.QuantityType" />
                        </td>
                        <td>
                            <button class="btn btn-block btn-info" @onclick="AddIngredient">Add</button>
                        </td>
                    </tr>
                    </tbody>
                </table>
            </div>
            <div class="modal-footer">
                <button class="btn btn-block btn-info" @onclick="Save" data-dismiss="modal">Save</button>
            </div>
        </div>
    </div>
</div>


@code {
    [Parameter]
    public string ModalTitle { get; set; }

    private RecipeModel RecipeModel { get; set; } = new RecipeModel();

    private IngredientModel NewIngredientModel { get; set; } = new IngredientModel();

    [Parameter]
    public EventCallback OnClose { get; set; }

    [Parameter]
    public EventCallback OnComplete { get; set; }

    protected override async Task OnInitializedAsync()
    {
    }

    private async Task Save()
    {
        await RecipesService.AddRecipe(RecipeModel);
        await OnComplete.InvokeAsync(null);
    }

    private void AddIngredient()
    {
        RecipeModel.Ingredients.Add(NewIngredientModel);
        NewIngredientModel = new IngredientModel();
    }

    private void RemoveIngredient(IngredientModel ingredient)
    {
        RecipeModel.Ingredients.Remove(ingredient);
    }
}
